{"mappings":"AA6CA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAAKC,KAChC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACJH,EACFF,EAAI,C,SAAEJ,E,MAAUC,IAErBI,EAAI,C,SAACL,E,MAAUC,G,IAGfS,QAAQC,IAAIT,EAAQ,GAEjBD,GAEL,OAAOC,C,CA/CIU,SAASC,cAAc,QAE/BC,iBAAiB,UAGtB,SAAkBC,GAChBA,EAAMC,iBAEN,MAAMC,EAAeF,EAAMG,OAAOC,SAClCT,QAAQC,IAAIM,GAEZ,MAAMG,EAAY,CAChBnB,MAAOoB,OAAOJ,EAAahB,MAAMqB,OACjCC,KAAMF,OAAOJ,EAAaM,KAAKD,OAC/BE,OAAQH,OAAOJ,EAAaO,OAAOF,QAErCZ,QAAQC,IAAIS,GAEZ,IAAK,IAAIK,EAAI,EAAGA,GAAKL,EAAUI,OAAQC,GAAK,EAC1C1B,EAAc0B,EAAGL,EAAUnB,OAC1ByB,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACnBS,QAAQC,IAAI,uBAAqBX,QAAiBC,MAAU,IAE7D0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBS,QAAQC,IAAI,sBAAoBX,QAAeC,MAAU,IAGzDmB,EAAUnB,OAASmB,EAAUG,KAC7Bb,QAAQC,IAAI,QAASS,EAAUnB,M","sources":["src/js/03-promises.js"],"sourcesContent":["// В HTML есть разметка формы, в поля которой пользователь будет вводить первую задержку в миллисекундах,\n// шаг увеличения задержки для каждого промиса после первого и количество промисов которое необходимо создать.\n\n// Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз,\n// сколько ввели в поле amount.При каждом вызове передай ей номер создаваемого промиса(position) и задержку \n// учитывая введенную пользователем первую задержку(delay) и шаг(step).\n\n// Дополни код функции createPromise так, чтобы она возвращала один промис, который выполянется или отклоняется \n// через delay времени.Значением промиса должен быть объект, в котором будут свойства position и delay со \n// значениями одноименных параметров.Используй начальный код функции для выбора того, что нужно сделать \n// с промисом - выполнить или отклонить.\n\nconst form = document.querySelector(\"form\");\n\nform.addEventListener(\"submit\", onSubmit);\n\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const formElements = event.target.elements;\n  console.log(formElements);\n\n  const arrayData = {\n    delay: Number(formElements.delay.value),\n    step: Number(formElements.step.value),\n    amount: Number(formElements.amount.value),\n  };\n  console.log(arrayData);\n\n  for (let i = 1; i <= arrayData.amount; i += 1) {\n    createPromise(i, arrayData.delay)\n    .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    \n    arrayData.delay += arrayData.step;\n    console.log(\"delay\", arrayData.delay);\n  }\n};\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => { \n       if (shouldResolve) {\n         res({ position, delay }); // Fulfill \n  } else {\n    rej({position, delay}) // Reject\n  }\n    })\n    console.log(promise);\n    \n    }, delay)\n  \n  return promise;\n};\n\n\n\n\n\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","promise","Promise","res","rej","shouldResolve","Math","random","setTimeout","console","log","document","querySelector","addEventListener","event","preventDefault","formElements","target","elements","arrayData","Number","value","step","amount","i","then","catch"],"version":3,"file":"03-promises.2d01ea6e.js.map"}